<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Tue, 10 Jun 2025 16:15:04 GMT -->

<!-- 
   Hi this is Dave Winer. I write all my project code in an outliner, which 
   generates all the files that make up this GitHub project. You'll see a 
   source.opml file like this in each of my projects. It contains the outline 
   source that the repo files were generated from. This is the most logical place 
   to store them. You can read the code in any outliner that supports OPML, which 
   includes https://drummer.land. You can use the Open URL command in 
   Drummer's File menu to open the "raw" version of this file straight from the 
   GitHub repo.
 -->

<opml version="2.0">
	<head>
		<title>nodeEditor: arttobluesky</title>
		<dateCreated>Sat, 01 Jul 2023 15:32:13 GMT</dateCreated>
		<dateModified>Tue, 10 Jun 2025 16:15:04 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 4, 15, 50, 60, 61, 62, 78, 94, 95, 98</expansionState>
		<vertScrollState>37</vertScrollState>
		<windowTop>143</windowTop>
		<windowLeft>296</windowLeft>
		<windowBottom>1046</windowBottom>
		<windowRight>1655</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/arttobluesky/" created="Sun, 18 Jun 2023 16:02:04 GMT">
			<outline text="worknotes.md" created="Sun, 18 Jun 2023 16:13:00 GMT">
				<outline text="#### 6/10/25; 9:30:29 AM by DW" created="Tue, 10 Jun 2025 13:30:29 GMT">
					<outline text="Introducing the daily art feed." created="Tue, 10 Jun 2025 13:30:30 GMT"/>
					<outline text="Add source:self to the hourly feed." created="Tue, 10 Jun 2025 13:40:47 GMT"/>
					</outline>
				<outline text="#### 6/7/25; 9:23:39 AM by DW" created="Sat, 07 Jun 2025 13:23:38 GMT">
					<outline text="Get the RSS feed ready to work with the timeline." created="Sat, 07 Jun 2025 13:23:39 GMT"/>
					<outline text="Added channel-level image element." created="Sat, 07 Jun 2025 13:24:00 GMT"/>
					</outline>
				<outline text="#### 5/15/25; 8:31:37 AM by DW" created="Thu, 15 May 2025 12:31:36 GMT">
					<outline text="Let's also put out an RSS feed." created="Thu, 15 May 2025 12:31:38 GMT">
						<outline text="http://scripting.com/artToBluesky/rss.xml" created="Thu, 15 May 2025 12:41:51 GMT"/>
						<outline text="http://scripting.com/artToBluesky/rss.json" created="Thu, 15 May 2025 12:41:51 GMT"/>
						</outline>
					</outline>
				<outline text="#### 1/5/25; 12:04:57 PM by DW" created="Sun, 05 Jan 2025 17:04:56 GMT">
					<outline text="May have fixed image uploading. Let's see.  " created="Sun, 05 Jan 2025 17:04:57 GMT"/>
					</outline>
				<outline text="#### 8/30/24; 9:49:35 AM by DW " created="Fri, 30 Aug 2024 13:49:34 GMT">
					<outline text="Save this to the misc folder on the github repo." created="Fri, 30 Aug 2024 13:49:35 GMT"/>
					</outline>
				<outline text="#### 9/20/23; 8:46:04 AM by DW" created="Wed, 20 Sep 2023 12:46:04 GMT">
					<outline text="Added config.enabled setting so we could temporarily turn the art flow off in case of problems.  " created="Wed, 20 Sep 2023 12:46:05 GMT"/>
					</outline>
				<outline text="#### 8/12/23; 5:06:50 PM by DW" created="Sat, 12 Aug 2023 21:06:49 GMT">
					<outline text="Did a test build so I could see that the batchloader app on peabody is working. " created="Sat, 12 Aug 2023 21:06:50 GMT"/>
					</outline>
				<outline text="#### 6/28/23; 5:30:34 PM by DW" created="Sun, 18 Jun 2023 16:13:02 GMT">
					<outline text="Starting." created="Sun, 18 Jun 2023 16:13:04 GMT"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;arttobluesky&quot;,"/>
					<outline text="&quot;description&quot;: &quot;Use textcasting to post art to Bluesky.&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.5.2&quot;,"/>
					<outline text="&quot;main&quot;: &quot;arttobluesky.js&quot;,"/>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daverss&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daves3&quot;: &quot;*&quot;,"/>
						<outline text="&quot;textcasting&quot;: &quot;*&quot;"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="arttobluesky.js">
				<outline text="const myVersion = &quot;0.5.2&quot;, myProductName = &quot;artToBluesky&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Thu, 15 May 2025 12:32:57 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);"/>
				<outline text="const request = require (&quot;request&quot;);"/>
				<outline text="const textcasting = require (&quot;textcasting&quot;);"/>
				<outline text="const rss = require (&quot;daverss&quot;);"/>
				<outline text="const s3 = require (&quot;daves3&quot;);"/>
				<outline text="const textcasting = require (&quot;./lib/textcasting.js&quot;);" isComment="true"/>
				<outline text="" created="Sun, 18 Jun 2023 16:03:38 GMT"/>
				<outline text="var config = {" created="Sun, 23 Apr 2023 15:03:29 GMT">
					<outline text="enabled: true," created="Wed, 20 Sep 2023 12:46:31 GMT"/>
					<outline text="artFolder: &quot;/Users/davewiner/github/artDownloader/&quot;,"/>
					<outline text="jsonFolder: &quot;data/json/&quot;," created="Thu, 29 Apr 2021 21:09:43 GMT"/>
					<outline text="ctMinutesBetwPosts: 60," created="Fri, 30 Jun 2023 15:15:27 GMT"/>
					<outline text="extraTags: &quot;&quot;," created="Fri, 30 Jun 2023 19:12:56 GMT"/>
					<outline text="extraTags: &quot;#art #pleaseshare&quot;" isComment="true" created="Fri, 30 Jun 2023 19:12:56 GMT"/>
					<outline text="pathDestRssFile: &quot;/scripting.com/artToBluesky/rss.xml&quot;,"/>
					<outline text="pathDestJsonFile: &quot;/scripting.com/artToBluesky/rss.json&quot;,"/>
					<outline text="rssFeedUrl: &quot;https://art.feediverse.org/&quot;,"/>
					<outline text="rssFeedUrl: &quot;http://scripting.com/artToBluesky/rss.xml&quot;," isComment="true"/>
					<outline text="rssTitle: &quot;Great art on Bluesky&quot;,"/>
					<outline text="rssLink: &quot;https://bsky.app/profile/art.feediverse.org&quot;,"/>
					<outline text="rssItemAuthor: &quot;dave.winer@gmail.com (Dave Winer)&quot;,"/>
					<outline text="rssDescription: &quot;A beautiful work of art every hour.&quot;, "/>
					<outline text="rssLanguage: &quot;en-us&quot;,"/>
					<outline text="rssGenerator: myProductName + &quot; v&quot; + myVersion,"/>
					<outline text="rssDocs: &quot;http://cyber.law.harvard.edu/rss/rss.html&quot;,"/>
					<outline text="rssMaxItems: 25,"/>
					<outline text="appDomain: &quot;scripting.com&quot;,"/>
					<outline text="flRssCloudEnabled:  true,"/>
					<outline text="rssCloudDomain:  &quot;rpc.rsscloud.io&quot;,"/>
					<outline text="rssCloudPort:  5337,"/>
					<outline text="rssCloudPath: &quot;/pleaseNotify&quot;,"/>
					<outline text="rssCloudRegisterProcedure:  &quot;&quot;,"/>
					<outline text="rssCloudProtocol:  &quot;http-post&quot;,"/>
					<outline text="fnameRssHistory: &quot;rssHistory.json&quot;," created="Thu, 15 May 2025 12:49:37 GMT"/>
					<outline text="" created="Tue, 10 Jun 2025 13:14:14 GMT"/>
					<outline text="rssDailyTitle: &quot;Great art on Bluesky (daily)&quot;, //6/10/25 by DW"/>
					<outline text="rssDailyDescription: &quot;A beautiful work of art every day.&quot;,"/>
					<outline text="pathDailyFeed: &quot;/scripting.com/artToBluesky/daily.xml&quot;," created="Tue, 10 Jun 2025 13:23:45 GMT"/>
					<outline text="rssDailyFeedUrl: &quot;https://artdaily.feediverse.org/&quot;," created="Tue, 10 Jun 2025 13:23:59 GMT"/>
					<outline text="rssDailyFeedUrl: &quot;https://scripting.com/artToBluesky/daily.xml&quot;" isComment="true" created="Tue, 10 Jun 2025 13:23:59 GMT"/>
					<outline text="};" created="Sun, 23 Apr 2023 15:03:32 GMT"/>
					</outline>
				<outline text="" created="Wed, 28 Jun 2023 21:40:39 GMT"/>
				<outline text="var globals = {" created="Wed, 28 Jun 2023 21:50:58 GMT">
					<outline text="theArt: new Array ()," created="Wed, 28 Jun 2023 21:51:14 GMT"/>
					<outline text="whenLastPost: new Date (0)," created="Fri, 30 Jun 2023 15:16:34 GMT"/>
					<outline text="rssHistory: new Array (), //5/15/25 by DW" created="Thu, 15 May 2025 12:50:13 GMT"/>
					<outline text="whenLastDaily: new Date () //6/10/25 by DW" created="Tue, 10 Jun 2025 13:44:05 GMT"/>
					<outline text="}" created="Wed, 28 Jun 2023 21:51:02 GMT"/>
					</outline>
				<outline text="" created="Sun, 18 Jun 2023 16:03:38 GMT"/>
				<outline text="function loadArtArray () {" isComment="true" created="Tue, 04 May 2021 16:20:09 GMT">
					<outline text="Changes" isComment="true" created="Wed, 19 May 2021 15:39:47 GMT">
						<outline text="5/19/21; 11:39:49 AM by DW" created="Wed, 19 May 2021 15:39:48 GMT">
							<outline text="Choose a random set of art for the array. We have almost 10K works of art in the database now." created="Wed, 19 May 2021 15:39:49 GMT"/>
							</outline>
						</outline>
					<outline text="var artArray = new Array ();" created="Tue, 04 May 2021 16:26:34 GMT"/>
					<outline text="const jsonFolder = config.artFolder + config.jsonFolder;" created="Wed, 28 Jun 2023 22:01:15 GMT"/>
					<outline text="const folderlist = fs.readdirSync (jsonFolder);" created="Tue, 04 May 2021 16:42:34 GMT"/>
					<outline text="folderlist.forEach (function (foldername) {" created="Tue, 04 May 2021 16:42:53 GMT">
						<outline text="if (!utils.beginsWith (foldername, &quot;.&quot;)) {" created="Wed, 28 Jun 2023 22:08:30 GMT">
							<outline text="const artistFolder = jsonFolder + foldername + &quot;/&quot;;" created="Wed, 28 Jun 2023 22:10:43 GMT"/>
							<outline text="const artistFolderlist = fs.readdirSync (artistFolder);" created="Tue, 04 May 2021 16:42:34 GMT"/>
							<outline text="artistFolderlist.forEach (function (fname) {" created="Wed, 28 Jun 2023 22:10:43 GMT">
								<outline text="if (!utils.beginsWith (fname, &quot;.&quot;)) {" created="Wed, 28 Jun 2023 22:13:10 GMT">
									<outline text="const f = artistFolder + fname;" created="Tue, 04 May 2021 16:51:28 GMT"/>
									<outline text="const jsontext = fs.readFileSync (f);" created="Tue, 04 May 2021 16:44:26 GMT"/>
									<outline text="artArray.push (JSON.parse (jsontext));" created="Wed, 28 Jun 2023 22:03:07 GMT"/>
									<outline text="}" created="Wed, 28 Jun 2023 22:13:10 GMT"/>
									</outline>
								<outline text="});" created="Wed, 28 Jun 2023 22:11:59 GMT"/>
								</outline>
							<outline text="}" created="Wed, 28 Jun 2023 22:08:45 GMT"/>
							</outline>
						<outline text="});" created="Tue, 04 May 2021 16:43:36 GMT"/>
						</outline>
					<outline text="return (artArray);" created="Wed, 28 Jun 2023 22:05:05 GMT"/>
					<outline text="}" created="Tue, 04 May 2021 16:20:19 GMT"/>
					</outline>
				<outline text="function getBlueskyUrl (uri) { //5/15/25 by DW">
					<outline text="const match = uri.match (/^at:\/\/([^\/]+)\/app\.bsky\.feed\.post\/(.+)$/);"/>
					<outline text="if (match) {">
						<outline text="const did = match [1];"/>
						<outline text="const rkey = match [2];"/>
						<outline text="return (`https://bsky.app/profile/${did}/post/${rkey}`);"/>
						<outline text="}"/>
						</outline>
					<outline text="else {" created="Thu, 15 May 2025 13:12:35 GMT">
						<outline text="return (undefined);" created="Thu, 15 May 2025 13:12:38 GMT"/>
						<outline text="}" created="Thu, 15 May 2025 13:12:43 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function readConfig (f, config, callback) {" created="Mon, 08 Mar 2021 15:19:44 GMT">
					<outline text="fs.readFile (f, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (!err) {" created="Mon, 08 Mar 2021 15:20:27 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="var jstruct = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="for (var x in jstruct) {" created="Mon, 08 Mar 2021 15:21:14 GMT">
									<outline text="config [x] = jstruct [x];" created="Mon, 08 Mar 2021 15:21:20 GMT"/>
									<outline text="}" created="Mon, 08 Mar 2021 15:21:25 GMT"/>
									</outline>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 08 Mar 2021 15:20:59 GMT">
								<outline text="console.log (&quot;Error reading &quot; + f);" created="Mon, 08 Mar 2021 15:20:35 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:21:03 GMT"/>
								</outline>
							<outline text="}" created="Mon, 08 Mar 2021 15:20:30 GMT"/>
							</outline>
						<outline text="callback ();" created="Mon, 08 Mar 2021 15:22:15 GMT"/>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Mon, 08 Mar 2021 15:19:56 GMT"/>
					</outline>
				<outline text="function buildDailyFeed () { //6/10/25 by DW" created="Tue, 10 Jun 2025 13:11:43 GMT">
					<outline text="if (globals.rssHistory.length &gt; 0) {" created="Tue, 10 Jun 2025 13:22:32 GMT">
						<outline text="const headElements = {">
							<outline text="title: config.rssDailyTitle,"/>
							<outline text="link: config.rssLink,"/>
							<outline text="description: config.rssDailyDescription,"/>
							<outline text="language: config.rssLanguage,"/>
							<outline text="generator: config.rssGenerator,"/>
							<outline text="docs: config.rssDocs,"/>
							<outline text="urlSelf: config.rssDailyFeedUrl," created="Tue, 10 Jun 2025 13:39:14 GMT"/>
							<outline text="maxFeedItems: config.rssMaxItems,"/>
							<outline text="appDomain: config.appDomain,"/>
							<outline text="flRssCloudEnabled:  config.flRssCloudEnabled,"/>
							<outline text="rssCloudDomain:  config.rssCloudDomain,"/>
							<outline text="rssCloudPort:  config.rssCloudPort,"/>
							<outline text="rssCloudPath: config.rssCloudPath,"/>
							<outline text="rssCloudRegisterProcedure:  config.rssCloudRegisterProcedure,"/>
							<outline text="rssCloudProtocol:  config.rssCloudProtocol,"/>
							<outline text="image: {" created="Sat, 07 Jun 2025 13:46:11 GMT">
								<outline text="url: &quot;https://imgs.scripting.com/2025/06/07/girlWithPearlEarring.png&quot;," created="Sat, 07 Jun 2025 13:46:40 GMT"/>
								<outline text="title: config.rssTitle," created="Sat, 07 Jun 2025 13:46:48 GMT"/>
								<outline text="link: config.rssLink," created="Sat, 07 Jun 2025 13:46:56 GMT"/>
								<outline text="description: config.rssDailyDescription" created="Sat, 07 Jun 2025 13:47:01 GMT"/>
								<outline text="}," created="Sat, 07 Jun 2025 13:46:14 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="const myHistory = [" created="Tue, 10 Jun 2025 13:21:23 GMT">
							<outline text="globals.rssHistory [0]" created="Tue, 10 Jun 2025 13:22:08 GMT"/>
							<outline text="];" created="Tue, 10 Jun 2025 13:21:59 GMT"/>
							</outline>
						<outline text="const xmltext = rss.buildRssFeed (headElements, myHistory);"/>
						<outline text="s3.newObject (config.pathDailyFeed, xmltext, &quot;text/xml&quot;, &quot;public-read&quot;, function (err, data) {">
							<outline text="if (err) {">
								<outline text="console.log (&quot;buildDailyFeed: err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="console.log (&quot;buildDailyFeed: config.pathDailyFeed == &quot; + config.pathDailyFeed);"/>
								<outline text="rss.cloudPing (undefined, config.rssDailyFeedUrl);"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Tue, 10 Jun 2025 13:22:38 GMT"/>
						</outline>
					<outline text="}" created="Tue, 10 Jun 2025 13:11:50 GMT"/>
					</outline>
				<outline text="function buildRssFeed () { //5/15/25 by DW" created="Tue, 06 May 2025 20:56:25 GMT">
					<outline text="const whenstart = new Date ();" created="Tue, 06 May 2025 21:01:16 GMT"/>
					<outline text="const fnameRss = &quot;rss.xml&quot;, fnameJson = &quot;rss.json&quot;;" created="Tue, 06 May 2025 17:28:06 GMT"/>
					<outline text="var headElements = {">
						<outline text="title: config.rssTitle,"/>
						<outline text="link: config.rssLink,"/>
						<outline text="description: config.rssDescription,"/>
						<outline text="language: config.rssLanguage,"/>
						<outline text="generator: config.rssGenerator,"/>
						<outline text="docs: config.rssDocs,"/>
						<outline text="maxFeedItems: config.rssMaxItems,"/>
						<outline text="appDomain: config.appDomain,"/>
						<outline text="flRssCloudEnabled:  config.flRssCloudEnabled,"/>
						<outline text="rssCloudDomain:  config.rssCloudDomain,"/>
						<outline text="rssCloudPort:  config.rssCloudPort,"/>
						<outline text="rssCloudPath: config.rssCloudPath,"/>
						<outline text="rssCloudRegisterProcedure:  config.rssCloudRegisterProcedure,"/>
						<outline text="rssCloudProtocol:  config.rssCloudProtocol,"/>
						<outline text="image: {" created="Sat, 07 Jun 2025 13:46:11 GMT">
							<outline text="url: &quot;https://imgs.scripting.com/2025/06/07/girlWithPearlEarring.png&quot;," created="Sat, 07 Jun 2025 13:46:40 GMT"/>
							<outline text="title: config.rssTitle," created="Sat, 07 Jun 2025 13:46:48 GMT"/>
							<outline text="link: config.rssLink," created="Sat, 07 Jun 2025 13:46:56 GMT"/>
							<outline text="description: config.rssDescription" created="Sat, 07 Jun 2025 13:47:01 GMT"/>
							<outline text="}," created="Sat, 07 Jun 2025 13:46:14 GMT"/>
							</outline>
						<outline text="urlSelf: config.rssFeedUrl, //6/10/25 by DW" created="Tue, 10 Jun 2025 13:39:14 GMT"/>
						<outline text="}"/>
						</outline>
					<outline text="function writeJsonVersion (headElements, rssHistory) {">
						<outline text="var jstruct = {">
							<outline text="headElements: headElements, "/>
							<outline text="items: rssHistory"/>
							<outline text="}"/>
							</outline>
						<outline text="var jsontext = utils.jsonStringify (jstruct);"/>
						<outline text="fs.writeFile (fnameJson, jsontext, function () {">
							<outline text="});"/>
							</outline>
						<outline text="s3.newObject (config.pathDestJsonFile, jsontext, &quot;application/json&quot;, &quot;public-read&quot;, function (err, data) {">
							<outline text="if (err) {">
								<outline text="console.log (&quot;writeJsonVersion: err.message == &quot; + err.message);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="console.log (&quot;writeJsonVersion: config.pathDestJsonFile == &quot; + config.pathDestJsonFile);"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="var xmltext = rss.buildRssFeed (headElements, globals.rssHistory);"/>
					<outline text="fs.writeFile (fnameRss, xmltext, function () {">
						<outline text="});"/>
						</outline>
					<outline text="s3.newObject (config.pathDestRssFile, xmltext, &quot;text/xml&quot;, &quot;public-read&quot;, function (err, data) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;buildRss: err.message == &quot; + err.message);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;buildRss: config.pathDestRssFile == &quot; + config.pathDestRssFile);"/>
							<outline text="rss.cloudPing (undefined, config.rssFeedUrl);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="writeJsonVersion (headElements, globals.rssHistory);"/>
					<outline text="}" created="Tue, 06 May 2025 20:56:33 GMT"/>
					</outline>
				<outline text="function readRssHistory (callback) {" created="Thu, 15 May 2025 12:50:52 GMT">
					<outline text="fs.readFile (config.fnameRssHistory, function (err, jsontext) {" created="Mon, 08 Mar 2021 15:19:57 GMT">
						<outline text="if (err) {" created="Thu, 15 May 2025 12:51:25 GMT">
							<outline text="callback (err);" created="Thu, 15 May 2025 12:51:29 GMT"/>
							<outline text="}" created="Thu, 15 May 2025 12:51:33 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 15 May 2025 12:51:33 GMT">
							<outline text="try {" created="Mon, 08 Mar 2021 15:20:49 GMT">
								<outline text="globals.rssHistory = JSON.parse (jsontext);" created="Mon, 08 Mar 2021 15:21:07 GMT"/>
								<outline text="}" created="Mon, 08 Mar 2021 15:20:58 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Thu, 15 May 2025 12:52:19 GMT">
								<outline text="callback (err);" created="Thu, 15 May 2025 12:52:23 GMT"/>
								<outline text="return;" created="Thu, 15 May 2025 12:52:56 GMT"/>
								<outline text="}" created="Thu, 15 May 2025 12:52:22 GMT"/>
								</outline>
							<outline text="callback (undefined, globals.rssHistory);" created="Thu, 15 May 2025 12:53:05 GMT"/>
							<outline text="}" created="Thu, 15 May 2025 12:51:35 GMT"/>
							</outline>
						<outline text="});" created="Mon, 08 Mar 2021 15:20:25 GMT"/>
						</outline>
					<outline text="}" created="Thu, 15 May 2025 12:51:01 GMT"/>
					</outline>
				<outline text="function saveRssHistory () {" created="Thu, 15 May 2025 12:33:56 GMT">
					<outline text="const jsontext = utils.jsonStringify (globals.rssHistory);" created="Thu, 15 May 2025 13:31:31 GMT"/>
					<outline text="fs.writeFile (config.fnameRssHistory, jsontext, function (err) {" created="Thu, 15 May 2025 13:31:08 GMT">
						<outline text="});" created="Thu, 15 May 2025 13:31:21 GMT"/>
						</outline>
					<outline text="}" created="Thu, 15 May 2025 13:30:58 GMT"/>
					</outline>
				<outline text="function postRandomArt (thePrefs=config) {" created="Wed, 28 Jun 2023 22:37:56 GMT">
					<outline text="globals.whenLastPost = new Date ();" created="Fri, 30 Jun 2023 15:18:25 GMT"/>
					<outline text="const ix = utils.random (0, globals.theArt.length - 1);" created="Wed, 28 Jun 2023 22:38:36 GMT"/>
					<outline text="const jstruct = globals.theArt [ix];" created="Wed, 28 Jun 2023 22:38:57 GMT"/>
					<outline text="console.log (utils.jsonStringify (jstruct));" isComment="true" created="Wed, 28 Jun 2023 22:39:13 GMT"/>
					<outline text="" created="Thu, 15 May 2025 13:24:10 GMT"/>
					<outline text="var githubUrl;" created="Thu, 15 May 2025 13:24:19 GMT"/>
					<outline text="" created="Tue, 10 Jun 2025 13:20:04 GMT"/>
					<outline text="function readImageFromGithub (fname, callback) { //7/9/23 by DW" created="Sun, 09 Jul 2023 23:19:51 GMT">
						<outline text="var url = &quot;https://raw.githubusercontent.com/scripting/artDownloader/main/data/images/&quot; + fname;"/>
						<outline text="request ({url, encoding: null}, function (err, response, data) {">
							<outline text="if (err) {" created="Sun, 09 Jul 2023 23:38:22 GMT">
								<outline text="callback (err);" created="Sun, 09 Jul 2023 23:38:26 GMT"/>
								<outline text="}" created="Sun, 09 Jul 2023 23:38:31 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 09 Jul 2023 23:38:32 GMT">
								<outline text="if (response.statusCode == 200) {" created="Sun, 09 Jul 2023 23:38:40 GMT">
									<outline text="githubUrl = url;" created="Thu, 15 May 2025 13:24:31 GMT"/>
									<outline text="callback (undefined, data);" created="Sun, 09 Jul 2023 23:38:45 GMT"/>
									<outline text="}" created="Sun, 09 Jul 2023 23:38:44 GMT"/>
									</outline>
								<outline text="else {" created="Sun, 09 Jul 2023 23:38:55 GMT">
									<outline text="message = &quot;HTTP error code == &quot; + response.statusCode;" created="Sun, 09 Jul 2023 23:38:57 GMT"/>
									<outline text="callback ({message});" created="Sun, 09 Jul 2023 23:39:24 GMT"/>
									<outline text="}" created="Sun, 09 Jul 2023 23:39:30 GMT"/>
									</outline>
								<outline text="}" created="Sun, 09 Jul 2023 23:38:34 GMT"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Sun, 09 Jul 2023 23:20:09 GMT"/>
						</outline>
					<outline text="" created="Thu, 29 Jun 2023 16:23:34 GMT"/>
					<outline text="readImageFromGithub (jstruct.fname, function (err, theImageData) {" created="Sun, 09 Jul 2023 23:31:36 GMT">
						<outline text="if (err) {" created="Sun, 09 Jul 2023 23:30:52 GMT">
							<outline text="console.log (&quot;postRandomArt: err.message == &quot; + err.message);" created="Sun, 09 Jul 2023 23:31:01 GMT"/>
							<outline text="}" created="Sun, 09 Jul 2023 23:31:04 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 09 Jul 2023 23:31:05 GMT">
							<outline text="console.log (&quot;postRandomArt: theImageData.length == &quot; + theImageData.length);" isComment="true" created="Sun, 09 Jul 2023 23:31:01 GMT"/>
							<outline text="const pattern = /https?:\/\/\S+/g;" created="Thu, 29 Jun 2023 17:56:26 GMT"/>
							<outline text="var title = jstruct.text.replace (pattern, &quot;&quot;); //delete the url at the end of the text" created="Thu, 29 Jun 2023 17:59:25 GMT"/>
							<outline text="title = title.replace (/ +/g, &quot; &quot;); //collapse multiple spaces to one space" created="Thu, 29 Jun 2023 18:04:33 GMT"/>
							<outline text="title = utils.trimWhitespace (title);" created="Thu, 29 Jun 2023 18:06:32 GMT"/>
							<outline text="title += &quot; &quot; + config.extraTags; //6/30/23 by DW" created="Fri, 30 Jun 2023 19:12:03 GMT"/>
							<outline text="const params = {" created="Thu, 29 Jun 2023 16:21:54 GMT">
								<outline text="urlsite: thePrefs.siteurl,"/>
								<outline text="mailaddress: thePrefs.mailaddress,"/>
								<outline text="password: thePrefs.password,"/>
								<outline text="title,"/>
								<outline text="description: jstruct.fname," isComment="true"/>
								<outline text="image: theImageData," created="Thu, 29 Jun 2023 16:50:22 GMT"/>
								<outline text="imagetype: &quot;image/jpeg&quot;" created="Thu, 29 Jun 2023 16:50:43 GMT"/>
								<outline text="link: jstruct.url" isComment="true"/>
								<outline text="}" created="Thu, 29 Jun 2023 16:22:00 GMT"/>
								</outline>
							<outline text="textcasting.post (&quot;bluesky&quot;, params, function (err, data) {" created="Thu, 29 Jun 2023 16:24:47 GMT">
								<outline text="if (err) {" created="Thu, 29 Jun 2023 16:25:15 GMT">
									<outline text="console.log (&quot;postRandomArt: err.message == &quot; + err.message);" created="Thu, 29 Jun 2023 16:25:18 GMT"/>
									<outline text="}" created="Thu, 29 Jun 2023 16:25:23 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 29 Jun 2023 16:25:23 GMT">
									<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: &quot; + params.title);" created="Thu, 29 Jun 2023 16:25:18 GMT"/>
									<outline text="console.log (&quot;postRandomArt: data == &quot; + utils.jsonStringify (data));" isComment="true" created="Thu, 29 Jun 2023 16:25:27 GMT"/>
									<outline text="" created="Thu, 15 May 2025 13:13:39 GMT"/>
									<outline text="const blueskyUrl = getBlueskyUrl (data.uri); //5/15/25 by DW" created="Thu, 15 May 2025 13:16:08 GMT"/>
									<outline text="const rssItem = {" created="Thu, 15 May 2025 13:13:39 GMT">
										<outline text="title: &quot;&quot;,"/>
										<outline text="text: title,"/>
										<outline text="when: new Date (),"/>
										<outline text="link: blueskyUrl,"/>
										<outline text="guid: {">
											<outline text="flPermalink: true,"/>
											<outline text="value: blueskyUrl"/>
											<outline text="},"/>
											</outline>
										<outline text="enclosure: {">
											<outline text="url: githubUrl," created="Thu, 15 May 2025 13:19:47 GMT"/>
											<outline text="type: &quot;image/jpeg&quot;," created="Thu, 15 May 2025 13:19:48 GMT"/>
											<outline text="length: theImageData.length," created="Thu, 15 May 2025 13:19:49 GMT"/>
											<outline text="}" created="Thu, 15 May 2025 13:19:33 GMT"/>
											</outline>
										<outline text="};" created="Thu, 15 May 2025 13:13:44 GMT"/>
										</outline>
									<outline text="globals.rssHistory.unshift (rssItem);" created="Thu, 15 May 2025 12:55:13 GMT"/>
									<outline text="while (globals.rssHistory.length &gt; config.rssMaxItems) {">
										<outline text="globals.rssHistory.pop ();"/>
										<outline text="}"/>
										</outline>
									<outline text="saveRssHistory ();" created="Thu, 15 May 2025 13:30:19 GMT"/>
									<outline text="buildRssFeed ();"/>
									<outline text="}" created="Thu, 29 Jun 2023 16:25:27 GMT"/>
									</outline>
								<outline text="});" created="Thu, 29 Jun 2023 16:25:09 GMT"/>
								</outline>
							<outline text="fs.writeFile (&quot;img.jpg&quot;, theImageData, function (err) { //debugging" created="Wed, 28 Jun 2023 22:41:38 GMT">
								<outline text="});" created="Wed, 28 Jun 2023 22:42:01 GMT"/>
								</outline>
							<outline text="}" created="Sun, 09 Jul 2023 23:31:13 GMT"/>
							</outline>
						<outline text="});" created="Sun, 09 Jul 2023 23:31:45 GMT"/>
						</outline>
					<outline text="" created="Sun, 09 Jul 2023 23:31:51 GMT"/>
					<outline text="const f = config.artFolder + &quot;data/images/&quot; + jstruct.fname;" isComment="true" created="Wed, 28 Jun 2023 22:40:16 GMT"/>
					<outline text="fs.readFile (f, function (err, theImageData) {" isComment="true" created="Wed, 28 Jun 2023 22:41:22 GMT">
						<outline text="if (err) {" created="Thu, 29 Jun 2023 16:49:28 GMT">
							<outline text="console.log (err.message);" created="Thu, 29 Jun 2023 16:49:30 GMT"/>
							<outline text="}" created="Thu, 29 Jun 2023 16:49:39 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 29 Jun 2023 16:49:39 GMT">
							<outline text="const pattern = /https?:\/\/\S+/g;" created="Thu, 29 Jun 2023 17:56:26 GMT"/>
							<outline text="var title = jstruct.text.replace (pattern, &quot;&quot;); //delete the url at the end of the text" created="Thu, 29 Jun 2023 17:59:25 GMT"/>
							<outline text="title = title.replace (/ +/g, &quot; &quot;); //collapse multiple spaces to one space" created="Thu, 29 Jun 2023 18:04:33 GMT"/>
							<outline text="title = utils.trimWhitespace (title);" created="Thu, 29 Jun 2023 18:06:32 GMT"/>
							<outline text="title += &quot; &quot; + config.extraTags; //6/30/23 by DW" created="Fri, 30 Jun 2023 19:12:03 GMT"/>
							<outline text="const params = {" created="Thu, 29 Jun 2023 16:21:54 GMT">
								<outline text="urlsite: thePrefs.siteurl,"/>
								<outline text="mailaddress: thePrefs.mailaddress,"/>
								<outline text="password: thePrefs.password,"/>
								<outline text="title,"/>
								<outline text="description: jstruct.fname," isComment="true"/>
								<outline text="image: theImageData," created="Thu, 29 Jun 2023 16:50:22 GMT"/>
								<outline text="imagetype: &quot;image/jpeg&quot;" created="Thu, 29 Jun 2023 16:50:43 GMT"/>
								<outline text="link: jstruct.url" isComment="true"/>
								<outline text="}" created="Thu, 29 Jun 2023 16:22:00 GMT"/>
								</outline>
							<outline text="textcasting.post (&quot;bluesky&quot;, params, function (err, data) {" created="Thu, 29 Jun 2023 16:24:47 GMT">
								<outline text="if (err) {" created="Thu, 29 Jun 2023 16:25:15 GMT">
									<outline text="console.log (&quot;postRandomArt: err.message == &quot; + err.message);" created="Thu, 29 Jun 2023 16:25:18 GMT"/>
									<outline text="}" created="Thu, 29 Jun 2023 16:25:23 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 29 Jun 2023 16:25:23 GMT">
									<outline text="console.log (new Date ().toLocaleTimeString () + &quot;: &quot; + params.title);" created="Thu, 29 Jun 2023 16:25:18 GMT"/>
									<outline text="console.log (&quot;postRandomArt: data == &quot; + utils.jsonStringify (data));" isComment="true" created="Thu, 29 Jun 2023 16:25:27 GMT"/>
									<outline text="}" created="Thu, 29 Jun 2023 16:25:27 GMT"/>
									</outline>
								<outline text="});" created="Thu, 29 Jun 2023 16:25:09 GMT"/>
								</outline>
							<outline text="fs.writeFile (&quot;img.jpg&quot;, theImageData, function (err) { //debugging" isComment="true" created="Wed, 28 Jun 2023 22:41:38 GMT">
								<outline text="});" created="Wed, 28 Jun 2023 22:42:01 GMT"/>
								</outline>
							<outline text="}" created="Thu, 29 Jun 2023 16:49:41 GMT"/>
							</outline>
						<outline text="});" created="Wed, 28 Jun 2023 22:41:32 GMT"/>
						</outline>
					<outline text="}" created="Wed, 28 Jun 2023 22:38:02 GMT"/>
					</outline>
				<outline text="function everyMinute () {" created="Thu, 29 Jun 2023 22:04:56 GMT">
					<outline text="if (config.enabled) { //9/20/23 by DW" created="Wed, 20 Sep 2023 12:46:44 GMT">
						<outline text="const now = new Date ();" created="Fri, 30 Jun 2023 19:16:34 GMT"/>
						<outline text="if ((now.getMinutes () % config.ctMinutesBetwPosts) == 0) {" created="Fri, 30 Jun 2023 19:16:34 GMT">
							<outline text="console.log (&quot;everyMinute: posting art, now == &quot; + now.toLocaleTimeString ());" created="Wed, 20 Sep 2023 11:52:37 GMT"/>
							<outline text="postRandomArt ();" created="Wed, 28 Jun 2023 22:37:38 GMT"/>
							<outline text="}" created="Fri, 30 Jun 2023 19:16:59 GMT"/>
							</outline>
						<outline text="if (!utils.sameDay (now, globals.lastDate)) { //6/10/25 by DW" created="Tue, 22 Apr 2025 18:55:07 GMT">
							<outline text="globals.lastDate = now;"/>
							<outline text="buildDailyFeed ();"/>
							<outline text="}" created="Tue, 22 Apr 2025 18:55:25 GMT"/>
							</outline>
						<outline text="}" created="Wed, 20 Sep 2023 12:46:50 GMT"/>
						</outline>
					<outline text="}" created="Thu, 29 Jun 2023 22:05:07 GMT"/>
					</outline>
				<outline text="function startup () {" created="Tue, 10 Jun 2025 13:47:47 GMT">
					<outline text="readConfig (&quot;config.json&quot;, config, function () {" created="Sun, 23 Apr 2023 13:52:02 GMT">
						<outline text="console.log (&quot;config == &quot; + utils.jsonStringify (config));" created="Sun, 23 Apr 2023 13:54:00 GMT"/>
						<outline text="readRssHistory (function (err) { //5/15/25 by DW" created="Thu, 15 May 2025 12:54:05 GMT">
							<outline text="fs.readFile (&quot;art.json&quot;, function (err, jsontext) { //a big file with info about all the art we have on github" created="Wed, 28 Jun 2023 22:36:26 GMT">
								<outline text="globals.theArt = JSON.parse (jsontext);" created="Wed, 28 Jun 2023 22:36:44 GMT"/>
								<outline text="console.log (&quot;globals.theArt.length == &quot; + globals.theArt.length);" created="Wed, 28 Jun 2023 21:41:59 GMT"/>
								<outline text="postRandomArt (); //post one immediately on startup " isComment="true" created="Wed, 28 Jun 2023 22:37:38 GMT"/>
								<outline text="buildDailyFeed (); //testing -- 6/10/25 by DW"/>
								<outline text="utils.runEveryMinute (everyMinute);"/>
								<outline text="})" created="Wed, 28 Jun 2023 22:36:40 GMT"/>
								</outline>
							<outline text="});" created="Thu, 15 May 2025 12:54:29 GMT"/>
							</outline>
						<outline text="" created="Wed, 28 Jun 2023 22:36:26 GMT"/>
						<outline text="globals.theArt = loadArtArray ();" isComment="true" created="Wed, 28 Jun 2023 21:51:38 GMT"/>
						<outline text="console.log (&quot;globals.theArt.length == &quot; + globals.theArt.length);" isComment="true" created="Wed, 28 Jun 2023 21:41:59 GMT"/>
						<outline text="fs.writeFile (&quot;art.json&quot;, utils.jsonStringify (globals.theArt), function (err) {" isComment="true" created="Wed, 28 Jun 2023 22:35:16 GMT">
							<outline text="});" created="Wed, 28 Jun 2023 22:35:46 GMT"/>
							</outline>
						<outline text="});" created="Sun, 23 Apr 2023 13:52:14 GMT"/>
						</outline>
					<outline text="}" created="Tue, 10 Jun 2025 13:47:53 GMT"/>
					</outline>
				<outline text="" created="Thu, 15 May 2025 13:12:16 GMT"/>
				<outline text="startup ();" created="Tue, 10 Jun 2025 13:47:54 GMT"/>
				<outline text="" created="Tue, 10 Jun 2025 13:47:48 GMT"/>
				<outline text=""/>
				</outline>
			<outline text="readme.md" created="Sat, 01 Jul 2023 15:37:50 GMT">
				<outline text="# Art to Bluesky" created="Sat, 01 Jul 2023 15:37:52 GMT">
					<outline text="Use textcasting to post art to Bluesky." created="Sat, 01 Jul 2023 15:38:01 GMT"/>
					</outline>
				</outline>
			<outline text="config.json" isComment="true" created="Sun, 23 Apr 2023 13:52:50 GMT">
				<outline text="{">
					<outline text="&quot;siteurl&quot;: &quot;https://bsky.social/&quot;,"/>
					<outline text="&quot;mailaddress&quot;: &quot;hello@mymail.com&quot;,"/>
					<outline text="&quot;password&quot;: &quot;&quot;"/>
					<outline text="}"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Sat, 01 Jul 2023 15:33:56 GMT">
			<outline text="nodeEditorSuite.utilities.buildArtToBluesky ()" created="Mon, 29 May 2023 15:42:16 GMT"/>
			</outline>
		</body>
	</opml>
